---
ansible_connection: local

jenkins_name: jenkins
sonarqube_name: sonarqube
hoverfly_name: hoverfly
zap_name: zap
nexus_password: "admin123"

jenkins:
  build:
    NAME: "{{ jenkins_name }}"
    SOURCE_REPOSITORY_URL: https://github.com/rht-labs/s2i-config-jenkins.git
    SOURCE_REPOSITORY_REF: v1.4
    BUILDER_IMAGE_STREAM_NAME: jenkins-2-rhel7
    BUILDER_IMAGE_STREAM_TAG_NAME: v3.11
    IMAGE_STREAM_NAMESPACE: "{{ ci_cd_namespace }}"
    SECRET_NAME: "jenkins-git-password"
    USERNAME: gitlab-sa
    PASSWORD: "some-secret-password"
    SOURCE_REPOSITORY_SECRET: "jenkins-git-password"
  deploy:
    NAMESPACE: "{{ ci_cd_namespace }}"
    JENKINS_IMAGE_STREAM_TAG: "{{ jenkins_name }}:latest"
    MEMORY_LIMIT: 8Gi
    JENKINS_OPTS: "--sessionTimeout=720"
    VOLUME_CAPACITY: 20Gi
    MEMORY_REQUEST: 2Gi
    JVM_ARCH: x86_64
    GITLAB_HOST: "gitlab.mydomain.example.com"
    GITLAB_TOKEN: "token123"
    GITLAB_GROUP_NAME: "rht-labs"

nexus:
  secret:
    SECRET_NAME: "nexus-password"
    USERNAME: admin
    PASSWORD: "{{ nexus_password }}"
  deploy:
    VOLUME_CAPACITY: 10Gi
    MEMORY_LIMIT: 2Gi
    CONTAINER_IMAGE: sonatype/nexus3:3.15.2

sonarqube:
  build:
    NAME: "{{ sonarqube_name }}"
    SOURCE_REPOSITORY_URL: "{{ cop_quickstarts }}"
    SOURCE_REPOSITORY_REF: "{{ cop_quickstarts_raw_version_tag }}"
    SOURCE_CONTEXT_DIR: sonarqube
  postgresql:
    POSTGRESQL_DATABASE: sonar
    VOLUME_CAPACITY: 5Gi
    POSTGRESQL_PASSWORD: sonar
    POSTGRESQL_USER: sonar
    DATABASE_SERVICE_NAME: sonardb
  deploy:
    POSTGRES_DATABASE_NAME: "sonar"

zalenium:
  NAMESPACE: "{{ ci_cd_namespace }}"
  IMAGE: "dosel/zalenium:latest"
  CPU_REQUEST: 200m
  MEMORY_REQUEST: 400Mi
  CPU_LIMIT: 1000m
  MEMORY_LIMIT: 2Gi

hoverfly:
  build:
    NAME: "{{ hoverfly_name }}"
    SOURCE_REPOSITORY_URL: "{{ cop_quickstarts }}"
    SOURCE_REPOSITORY_REF: "{{ cop_quickstarts_raw_version_tag }}"
    SOURCE_CONTEXT_DIR: hoverfly
  deploy:
    NAMESPACE: "{{ ci_cd_namespace }}"
    MEMORY_LIMIT: 2Gi
    HOVERFLY_IMAGE_STREAM_TAG: "{{ hoverfly_name }}:latest"

<<<<<<< HEAD
zap:
  build:
    NAME: "{{ zap_name }}"
    SOURCE_REPOSITORY_URL: https://github.com/haithamshahin333/containers-quickstarts.git
    SOURCE_REPOSITORY_REF: master
    SOURCE_CONTEXT_DIR: owasp-zap
  deploy:
    NAME: "{{ zap_name }}"
  
=======
pact_broker:
  POSTGRESQL_USERNAME: pact_broker_user
  POSTGRESQL_PERSISTENT_VOLUME_CLAIM_SIZE: 5Gi
  GIT_REPOSITORY: https://github.com/DiUS/pact_broker-docker.git

>>>>>>> 1608eb51f5fbdf01a514cc9b766a39b088c91300
openshift_cluster_content:
- galaxy_requirements:
  - pre_post_requirements.yml # Uses openshift-label role from casl-ansible
# CI/CD builds are customisations to base software to enhance their functionality or make them OCP ready 
- object: ci-cd-builds
  content:
  - name: jenkins-s2i
    template: "{{ openshift_templates_raw }}/{{ openshift_templates_raw_version_tag }}/jenkins-s2i-build/jenkins-s2i-build-template.yml"
    params_from_vars: "{{ jenkins.build }}"
    namespace: "{{ ci_cd_namespace }}"
    tags:
    - jenkins
    - jenkins-build
    - ci-cd-builds
  - name: tool-box
    template: "{{ cop_quickstarts_raw }}/{{ cop_quickstarts_raw_version_tag }}/build-docker-generic/.openshift/templates/docker-build-template.yml"
    params_from_vars:
      NAME: tool-box
      SOURCE_REPOSITORY_URL: "{{ cop_quickstarts }}"
      SOURCE_REPOSITORY_REF: v1.1
      SOURCE_CONTEXT_DIR: tool-box
    namespace: "{{ ci_cd_namespace }}"
    tags:
    - tool-box
    - ci-cd-builds
  - name: hoverfly
    template: "{{ cop_quickstarts_raw }}/{{ cop_quickstarts_raw_version_tag }}/build-docker-generic/.openshift/templates/docker-build-template.yml"
    params_from_vars: "{{ hoverfly.build }}"
    namespace: "{{ ci_cd_namespace }}"
    tags:
    - hoverfly
    - ci-cd-builds
  - name: sonarqube
    template: "{{ cop_quickstarts_raw }}/{{ cop_quickstarts_raw_version_tag }}/build-docker-generic/.openshift/templates/docker-build-template.yml"
    params_from_vars: "{{ sonarqube.build }}"
    namespace: "{{ ci_cd_namespace }}"
    tags:
<<<<<<< HEAD
      - sonarqube
      - sonarqube-build
  - name: zap
    template: "https://raw.githubusercontent.com/haithamshahin333/containers-quickstarts/master/build-docker-generic/.openshift/templates/docker-build-template.yml"
    params_from_vars: "{{ zap.build }}"
    namespace: "{{ ci_cd_namespace }}"
    tags:
      - zap
      - zap-build
=======
    - sonarqube
    - sonarqube-build
    - ci-cd-builds
  - name: pact-broker
    template: "{{ openshift_templates_raw }}/{{ openshift_templates_raw_version_tag }}/pact-broker/pact-broker-build.yml"
    params_from_vars: "{{ pact_broker }}"
    namespace: "{{ ci_cd_namespace }}"
    tags:
      - pact-broker
      - pact-broker-build
      - ci-cd-builds

# Secrets stored in OCP land and sync'd to Jenkins for consumption
- object: ci-cd-secrets
  content:
  - name: nexus-secret
    template: "{{ openshift_templates_raw }}/{{ openshift_templates_raw_version_tag }}/secrets/secret-user-pass-plaintext.yml"
    params_from_vars: "{{ nexus.secret }}"
    namespace: "{{ ci_cd_namespace }}"
    tags:
    - jenkins
    - secret
    - ci-cd-secrets
  - name: jenkins-secret
    template: "{{ openshift_templates_raw }}/{{ openshift_templates_raw_version_tag }}/secrets/secret-user-pass-plaintext.yml"
    params_from_vars: "{{ jenkins.build }}"
    namespace: "{{ ci_cd_namespace }}"
    tags:
    - jenkins
    - secret
    - ci-cd-secrets

# Jenkins slave agents to give him some superpowers in OCP land
>>>>>>> 1608eb51f5fbdf01a514cc9b766a39b088c91300
- object: jenkins-slave-nodes
  content:
  - name: jenkins-slave-mvn
    template: "{{ cop_quickstarts_raw }}/{{ cop_quickstarts_raw_version_tag }}/jenkins-slaves/.openshift/templates/jenkins-slave-generic-template.yml"
    params: "{{ inventory_dir }}/../params/jenkins-slaves/mvn"
    namespace: "{{ ci_cd_namespace }}"
    tags:
    - jenkins-slaves
    - mvn-slave
  - name: jenkins-slave-npm
    template: "{{ cop_quickstarts_raw }}/{{ cop_quickstarts_raw_version_tag }}/jenkins-slaves/.openshift/templates/jenkins-slave-generic-template.yml"
    params: "{{ inventory_dir }}/../params/jenkins-slaves/npm"
    namespace: "{{ ci_cd_namespace }}"
    tags:
    - jenkins-slaves
    - npm-slave
  - name: jenkins-slave-zap
    template: "{{ cop_quickstarts_raw }}/{{ cop_quickstarts_raw_version_tag }}/jenkins-slaves/.openshift/templates/jenkins-slave-generic-template.yml"
    params: "{{ inventory_dir }}/../params/jenkins-slaves/zap"
    namespace: "{{ ci_cd_namespace }}"
    tags:
    - jenkins-slaves
    - zap-slave
  - name: jenkins-slave-ansible
    template: "{{ cop_quickstarts_raw }}/{{ cop_quickstarts_raw_version_tag }}/jenkins-slaves/.openshift/templates/jenkins-slave-generic-template.yml"
    params: "{{ inventory_dir }}/../params/jenkins-slaves/ansible"
    namespace: "{{ ci_cd_namespace }}"
    tags:
      - jenkins-slaves
      - ansible-slave
  - name: jenkins-slave-arachni
    template: "{{ cop_quickstarts_raw }}/{{ cop_quickstarts_raw_version_tag }}/jenkins-slaves/.openshift/templates/jenkins-slave-generic-template.yml"
    params: "{{ inventory_dir }}/../params/jenkins-slaves/arachni"
    namespace: "{{ ci_cd_namespace }}"
    tags:
      - jenkins-slaves
      - arachni-slave
  - name: jenkins-slave-gradle
    template: "{{ cop_quickstarts_raw }}/{{ cop_quickstarts_raw_version_tag }}/jenkins-slaves/.openshift/templates/jenkins-slave-generic-template.yml"
    params: "{{ inventory_dir }}/../params/jenkins-slaves/gradle"
    namespace: "{{ ci_cd_namespace }}"
    tags:
      - jenkins-slaves
      - gradle-slave
  - name: jenkins-slave-golang
    template: "{{ cop_quickstarts_raw }}/{{ cop_quickstarts_raw_version_tag }}/jenkins-slaves/.openshift/templates/jenkins-slave-generic-template.yml"
    params: "{{ inventory_dir }}/../params/jenkins-slaves/golang"
    namespace: "{{ ci_cd_namespace }}"
    tags:
      - jenkins-slaves
      - golang-slave
  - name: jenkins-slave-mongodb
    template: "{{ cop_quickstarts_raw }}/{{ cop_quickstarts_raw_version_tag }}/jenkins-slaves/.openshift/templates/jenkins-slave-generic-template.yml"
    params: "{{ inventory_dir }}/../params/jenkins-slaves/mongodb"
    namespace: "{{ ci_cd_namespace }}"
    tags:
      - jenkins-slaves
      - mongodb-slave
  - name: jenkins-slave-python
    template: "{{ cop_quickstarts_raw }}/{{ cop_quickstarts_raw_version_tag }}/jenkins-slaves/.openshift/templates/jenkins-slave-generic-template.yml"
    params: "{{ inventory_dir }}/../params/jenkins-slaves/python"
    namespace: "{{ ci_cd_namespace }}"
    tags:
      - jenkins-slaves
      - python-slave

# CI/CD Deployments is the OpenShift Deployment Configs and all
# supporting tooling, pre and post hooks needed to setup and configure a comprehensive tool chain
- object: ci-cd-deployments
  content: ## SONARQUBE DB DEPLOYMENT MUST COME BEFORE SONARQUBE DEPLOYMENT OR THE JDBC SECRETS WILL NOT BE CREATED PROPERLY
  - name: sonardb
    template: "openshift//postgresql-persistent"
    params_from_vars: "{{ sonarqube.postgresql }}"
    namespace: "{{ ci_cd_namespace }}"
    post_steps:
    - role: casl-ansible/roles/openshift-labels
      vars:
        target_namespace: "{{ ci_cd_namespace }}"
        label: "app=sonarqube"
        target_object: dc
        target_name: sonardb
    - role: casl-ansible/roles/openshift-labels
      vars:
        target_namespace: "{{ ci_cd_namespace }}"
        label: "app=sonarqube"
        target_object: svc
        target_name: sonardb
    - role: casl-ansible/roles/openshift-labels
      vars:
        target_namespace: "{{ ci_cd_namespace }}"
        label: "app=sonarqube"
        target_object: secret
        target_name: sonardb
    tags:
      - sonarqube
      - sonarqube-postgresql
      - sonarqube-postgresql-deploy
      - ci-cd-deployments
  - name: sonarqube
    template: "{{ cop_quickstarts_raw }}/{{ cop_quickstarts_raw_version_tag }}/sonarqube/.openshift/templates/sonarqube-deployment-template.yml"
    params_from_vars: "{{ sonarqube.deploy }}"
    namespace: "{{ ci_cd_namespace }}"
    tags:
      - sonarqube
      - sonarqube-deploy
      - ci-cd-deployments
  - name: nexus
    template: "{{ openshift_templates_raw }}/{{ openshift_templates_raw_version_tag }}/nexus/nexus-deployment-template.yml"
    params_from_vars: "{{ nexus.deploy }}"
    namespace: "{{ ci_cd_namespace }}"
    post_steps:
    - role: infra-ansible/roles/config-nexus
      vars:
        nexus_namespace: "{{ ci_cd_namespace }}"
        nexus_user: "admin"
        nexus_password: "{{ nexus_password }}"
        nexus_api_base_path: /service/rest/v1
    tags:
      - nexus
      - nexus-deploy
      - ci-cd-deployments
  #  Want to use Ephemeral Jenkins? Just swap out these two lines
  # - name: jenkins-ephemeral
  #   template: "{{ openshift_templates_raw }}/{{ openshift_templates_raw_version_tag }}/jenkins/jenkins-ephemeral-template.yml"
  #   params_from_vars: "{{ jenkins.deploy }}"
  #   namespace: "{{ ci_cd_namespace }}"
  #   tags:
  #     - jenkins
  #     - jenkins-deploy
  #     - jenkins-ephemeral
  #     - ci-cd-deployments
  - name: jenkins-persistent
    template: "{{ openshift_templates_raw }}/{{ openshift_templates_raw_version_tag }}/jenkins/jenkins-persistent-template.yml"
    params_from_vars: "{{ jenkins.deploy }}"
    namespace: "{{ ci_cd_namespace }}"
    tags:
      - jenkins
      - jenkins-deploy
      - jenkins-persistent
      - ci-cd-deployments
  - name: zalenium
    template: "{{ cop_quickstarts_raw }}/{{ cop_quickstarts_raw_version_tag }}/zalenium/.openshift/templates/zalenium-deployment.yml"
    params_from_vars: "{{ zalenium }}"
    namespace: "{{ ci_cd_namespace }}"
    tags:
      - zalenium
      - zalenium-deploy
      - ci-cd-deployments
  - name: hoverfly
    template: "{{ cop_quickstarts_raw }}/{{ cop_quickstarts_raw_version_tag }}/hoverfly/.openshift/templates/hoverfly-deployment-template.yml"
    params_from_vars: "{{ hoverfly.deploy }}"
    namespace: "{{ ci_cd_namespace }}"
    tags:
      - hoverfly
      - hoverfly-deploy
<<<<<<< HEAD
  - name: zap-template
    file: "https://raw.githubusercontent.com/haithamshahin333/containers-quickstarts/master/owasp-zap/.openshift/templates/zap-deployment-template.yml"
    namespace: "{{ ci_cd_namespace }}"
    params_from_vars: "{{ zap.deploy }}"
    tags:
      - zap
      - zap-deploy
=======
      - ci-cd-deployments
  - name: pact-broker
    template: "{{ openshift_templates_raw }}/{{ openshift_templates_raw_version_tag }}/pact-broker/pact-broker-deploy.yml"
    params_from_vars: "{{ pact_broker }}"
    namespace: "{{ ci_cd_namespace }}"
    tags:
      - pact-broker
      - pact-broker-deploy
      - ci-cd-deployments
>>>>>>> 1608eb51f5fbdf01a514cc9b766a39b088c91300
